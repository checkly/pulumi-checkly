{
    "name": "checkly",
    "description": "A Pulumi package for creating and managing Checkly monitoring resources.",
    "keywords": [
        "pulumi",
        "checkly",
        "category/monitoring"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "MIT",
    "attribution": "This Pulumi package is based on the [`checkly` Terraform Provider](https://github.com/checkly/terraform-provider-checkly).",
    "repository": "https://github.com/checkly/pulumi-checkly",
    "logoUrl": "https://raw.githubusercontent.com/checkly/pulumi-checkly/main/assets/checkly.svg",
    "pluginDownloadURL": "https://github.com/checkly/pulumi-checkly/releases/${VERSION}",
    "publisher": "checkly",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "accountId": {
                "type": "string"
            },
            "apiKey": {
                "type": "string"
            },
            "apiUrl": {
                "type": "string"
            }
        },
        "defaults": [
            "apiKey"
        ]
    },
    "types": {
        "checkly:index/AlertChannelEmail:AlertChannelEmail": {
            "properties": {
                "address": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address"
            ]
        },
        "checkly:index/AlertChannelOpsgenie:AlertChannelOpsgenie": {
            "properties": {
                "apiKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "apiKey",
                "name",
                "priority",
                "region"
            ]
        },
        "checkly:index/AlertChannelPagerduty:AlertChannelPagerduty": {
            "properties": {
                "account": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "serviceKey"
            ]
        },
        "checkly:index/AlertChannelSlack:AlertChannelSlack": {
            "properties": {
                "channel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "channel",
                "url"
            ]
        },
        "checkly:index/AlertChannelSms:AlertChannelSms": {
            "properties": {
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "number": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "number"
            ]
        },
        "checkly:index/AlertChannelWebhook:AlertChannelWebhook": {
            "properties": {
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "webhookSecret": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "headers",
                        "name",
                        "queryParameters",
                        "url"
                    ]
                }
            }
        },
        "checkly:index/CheckAlertChannelSubscription:CheckAlertChannelSubscription": {
            "properties": {
                "activated": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "channelId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "activated",
                "channelId"
            ]
        },
        "checkly:index/CheckAlertSettings:CheckAlertSettings": {
            "properties": {
                "escalationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reminders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/checkly:index/CheckAlertSettingsReminder:CheckAlertSettingsReminder"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runBasedEscalations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/checkly:index/CheckAlertSettingsRunBasedEscalation:CheckAlertSettingsRunBasedEscalation"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCertificates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/checkly:index/CheckAlertSettingsSslCertificate:CheckAlertSettingsSslCertificate"
                    },
                    "deprecationMessage": "The property `ssl_certificates` is deprecated and it's ignored by the Checkly Public API. It will be removed in a future version.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeBasedEscalations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/checkly:index/CheckAlertSettingsTimeBasedEscalation:CheckAlertSettingsTimeBasedEscalation"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "checkly:index/CheckAlertSettingsReminder:CheckAlertSettingsReminder": {
            "properties": {
                "amount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "checkly:index/CheckAlertSettingsRunBasedEscalation:CheckAlertSettingsRunBasedEscalation": {
            "properties": {
                "failedRunThreshold": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "checkly:index/CheckAlertSettingsSslCertificate:CheckAlertSettingsSslCertificate": {
            "properties": {
                "alertThreshold": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "checkly:index/CheckAlertSettingsTimeBasedEscalation:CheckAlertSettingsTimeBasedEscalation": {
            "properties": {
                "minutesFailingThreshold": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "checkly:index/CheckGroupAlertChannelSubscription:CheckGroupAlertChannelSubscription": {
            "properties": {
                "activated": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "channelId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "activated",
                "channelId"
            ]
        },
        "checkly:index/CheckGroupAlertSettings:CheckGroupAlertSettings": {
            "properties": {
                "escalationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reminders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/checkly:index/CheckGroupAlertSettingsReminder:CheckGroupAlertSettingsReminder"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "runBasedEscalations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/checkly:index/CheckGroupAlertSettingsRunBasedEscalation:CheckGroupAlertSettingsRunBasedEscalation"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCertificates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/checkly:index/CheckGroupAlertSettingsSslCertificate:CheckGroupAlertSettingsSslCertificate"
                    },
                    "deprecationMessage": "The property `ssl_certificates` is deprecated and it's ignored by the Checkly Public API. It will be removed in a future version.",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeBasedEscalations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/checkly:index/CheckGroupAlertSettingsTimeBasedEscalation:CheckGroupAlertSettingsTimeBasedEscalation"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "checkly:index/CheckGroupAlertSettingsReminder:CheckGroupAlertSettingsReminder": {
            "properties": {
                "amount": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "checkly:index/CheckGroupAlertSettingsRunBasedEscalation:CheckGroupAlertSettingsRunBasedEscalation": {
            "properties": {
                "failedRunThreshold": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "checkly:index/CheckGroupAlertSettingsSslCertificate:CheckGroupAlertSettingsSslCertificate": {
            "properties": {
                "alertThreshold": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "checkly:index/CheckGroupAlertSettingsTimeBasedEscalation:CheckGroupAlertSettingsTimeBasedEscalation": {
            "properties": {
                "minutesFailingThreshold": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "checkly:index/CheckGroupApiCheckDefaults:CheckGroupApiCheckDefaults": {
            "properties": {
                "assertions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/checkly:index/CheckGroupApiCheckDefaultsAssertion:CheckGroupApiCheckDefaultsAssertion"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuth": {
                    "$ref": "#/types/checkly:index/CheckGroupApiCheckDefaultsBasicAuth:CheckGroupApiCheckDefaultsBasicAuth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "default": "",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "basicAuth",
                        "headers",
                        "queryParameters",
                        "url"
                    ]
                }
            }
        },
        "checkly:index/CheckGroupApiCheckDefaultsAssertion:CheckGroupApiCheckDefaultsAssertion": {
            "properties": {
                "comparison": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "property": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparison",
                "source",
                "target"
            ]
        },
        "checkly:index/CheckGroupApiCheckDefaultsBasicAuth:CheckGroupApiCheckDefaultsBasicAuth": {
            "properties": {
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        },
        "checkly:index/CheckRequest:CheckRequest": {
            "properties": {
                "assertions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/checkly:index/CheckRequestAssertion:CheckRequestAssertion"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "basicAuth": {
                    "$ref": "#/types/checkly:index/CheckRequestBasicAuth:CheckRequestBasicAuth",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "body": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bodyType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "followRedirects": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "method": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryParameters": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "skipSsl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "basicAuth",
                        "headers",
                        "queryParameters",
                        "url"
                    ]
                }
            }
        },
        "checkly:index/CheckRequestAssertion:CheckRequestAssertion": {
            "properties": {
                "comparison": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "property": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "source": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "comparison",
                "source"
            ]
        },
        "checkly:index/CheckRequestBasicAuth:CheckRequestBasicAuth": {
            "properties": {
                "password": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "password",
                "username"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the checkly package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "accountId": {
                "type": "string"
            },
            "apiKey": {
                "type": "string"
            },
            "apiUrl": {
                "type": "string"
            }
        },
        "required": [
            "apiKey"
        ],
        "inputProperties": {
            "accountId": {
                "type": "string"
            },
            "apiKey": {
                "type": "string"
            },
            "apiUrl": {
                "type": "string"
            }
        },
        "requiredInputs": [
            "apiKey"
        ]
    },
    "resources": {
        "checkly:index/alertChannel:AlertChannel": {
            "properties": {
                "email": {
                    "$ref": "#/types/checkly:index/AlertChannelEmail:AlertChannelEmail"
                },
                "opsgenie": {
                    "$ref": "#/types/checkly:index/AlertChannelOpsgenie:AlertChannelOpsgenie"
                },
                "pagerduty": {
                    "$ref": "#/types/checkly:index/AlertChannelPagerduty:AlertChannelPagerduty"
                },
                "sendDegraded": {
                    "type": "boolean",
                    "description": "(Default `false`)\n"
                },
                "sendFailure": {
                    "type": "boolean",
                    "description": "(Default `true`)\n"
                },
                "sendRecovery": {
                    "type": "boolean",
                    "description": "(Default `true`)\n"
                },
                "slack": {
                    "$ref": "#/types/checkly:index/AlertChannelSlack:AlertChannelSlack"
                },
                "sms": {
                    "$ref": "#/types/checkly:index/AlertChannelSms:AlertChannelSms"
                },
                "sslExpiry": {
                    "type": "boolean",
                    "description": "(Default `false`)\n"
                },
                "sslExpiryThreshold": {
                    "type": "integer",
                    "description": "Value must be between 1 and 30 (Default `30`)\n"
                },
                "webhook": {
                    "$ref": "#/types/checkly:index/AlertChannelWebhook:AlertChannelWebhook"
                }
            },
            "inputProperties": {
                "email": {
                    "$ref": "#/types/checkly:index/AlertChannelEmail:AlertChannelEmail"
                },
                "opsgenie": {
                    "$ref": "#/types/checkly:index/AlertChannelOpsgenie:AlertChannelOpsgenie"
                },
                "pagerduty": {
                    "$ref": "#/types/checkly:index/AlertChannelPagerduty:AlertChannelPagerduty"
                },
                "sendDegraded": {
                    "type": "boolean",
                    "description": "(Default `false`)\n"
                },
                "sendFailure": {
                    "type": "boolean",
                    "description": "(Default `true`)\n"
                },
                "sendRecovery": {
                    "type": "boolean",
                    "description": "(Default `true`)\n"
                },
                "slack": {
                    "$ref": "#/types/checkly:index/AlertChannelSlack:AlertChannelSlack"
                },
                "sms": {
                    "$ref": "#/types/checkly:index/AlertChannelSms:AlertChannelSms"
                },
                "sslExpiry": {
                    "type": "boolean",
                    "description": "(Default `false`)\n"
                },
                "sslExpiryThreshold": {
                    "type": "integer",
                    "description": "Value must be between 1 and 30 (Default `30`)\n"
                },
                "webhook": {
                    "$ref": "#/types/checkly:index/AlertChannelWebhook:AlertChannelWebhook"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlertChannel resources.\n",
                "properties": {
                    "email": {
                        "$ref": "#/types/checkly:index/AlertChannelEmail:AlertChannelEmail"
                    },
                    "opsgenie": {
                        "$ref": "#/types/checkly:index/AlertChannelOpsgenie:AlertChannelOpsgenie"
                    },
                    "pagerduty": {
                        "$ref": "#/types/checkly:index/AlertChannelPagerduty:AlertChannelPagerduty"
                    },
                    "sendDegraded": {
                        "type": "boolean",
                        "description": "(Default `false`)\n"
                    },
                    "sendFailure": {
                        "type": "boolean",
                        "description": "(Default `true`)\n"
                    },
                    "sendRecovery": {
                        "type": "boolean",
                        "description": "(Default `true`)\n"
                    },
                    "slack": {
                        "$ref": "#/types/checkly:index/AlertChannelSlack:AlertChannelSlack"
                    },
                    "sms": {
                        "$ref": "#/types/checkly:index/AlertChannelSms:AlertChannelSms"
                    },
                    "sslExpiry": {
                        "type": "boolean",
                        "description": "(Default `false`)\n"
                    },
                    "sslExpiryThreshold": {
                        "type": "integer",
                        "description": "Value must be between 1 and 30 (Default `30`)\n"
                    },
                    "webhook": {
                        "$ref": "#/types/checkly:index/AlertChannelWebhook:AlertChannelWebhook"
                    }
                },
                "type": "object"
            }
        },
        "checkly:index/check:Check": {
            "properties": {
                "activated": {
                    "type": "boolean",
                    "description": "Determines if the check is running or not. Possible values `true`, and `false`.\n"
                },
                "alertChannelSubscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/checkly:index/CheckAlertChannelSubscription:CheckAlertChannelSubscription"
                    }
                },
                "alertSettings": {
                    "$ref": "#/types/checkly:index/CheckAlertSettings:CheckAlertSettings"
                },
                "degradedResponseTime": {
                    "type": "integer",
                    "description": "The response time in milliseconds starting from which a check should be considered degraded. Possible values are between\n0 and 30000. (Default `15000`).\n"
                },
                "doubleCheck": {
                    "type": "boolean",
                    "description": "Setting this to `true` will trigger a retry when a check fails from the failing region and another, randomly selected\nregion before marking the check as failed.\n"
                },
                "environmentVariables": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Key/value pairs for setting environment variables during check execution. These are only relevant for browser checks.\nUse global environment variables whenever possible.\n"
                },
                "frequency": {
                    "type": "integer",
                    "description": "The frequency in minutes to run the check. Possible values are `0`, `1`, `5`, `10`, `15`, `30`, `60`, `720`, and `1440`.\n"
                },
                "frequencyOffset": {
                    "type": "integer",
                    "description": "This property only valid for API high frequency checks. To create a hight frequency check, the property `frequency` must\nbe `0` and `frequency_offset` could be `10`, `20` or `30`.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The id of the check group this check is part of.\n"
                },
                "groupOrder": {
                    "type": "integer",
                    "description": "The position of this check in a check group. It determines in what order checks are run when a group is triggered from\nthe API or from CI/CD.\n"
                },
                "localSetupScript": {
                    "type": "string",
                    "description": "A valid piece of Node.js code to run in the setup phase.\n"
                },
                "localTeardownScript": {
                    "type": "string",
                    "description": "A valid piece of Node.js code to run in the teardown phase.\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of one or more data center locations where to run the this check. (Default [\"us-east-1\"])\n"
                },
                "maxResponseTime": {
                    "type": "integer",
                    "description": "The response time in milliseconds starting from which a check should be considered failing. Possible values are between\n0 and 30000. (Default `30000`).\n"
                },
                "muted": {
                    "type": "boolean",
                    "description": "Determines if any notifications will be sent out when a check fails/degrades/recovers.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the check.\n"
                },
                "request": {
                    "$ref": "#/types/checkly:index/CheckRequest:CheckRequest",
                    "description": "An API check might have one request config.\n"
                },
                "runtimeId": {
                    "type": "string",
                    "description": "The id of the runtime to use for this check.\n"
                },
                "script": {
                    "type": "string",
                    "description": "A valid piece of Node.js JavaScript code describing a browser interaction with the Puppeteer/Playwright framework or a\nreference to an external JavaScript file.\n"
                },
                "setupSnippetId": {
                    "type": "integer",
                    "description": "An ID reference to a snippet to use in the setup phase of an API check.\n"
                },
                "shouldFail": {
                    "type": "boolean",
                    "description": "Allows to invert the behaviour of when a check is considered to fail. Allows for validating error status like 404.\n"
                },
                "sslCheck": {
                    "type": "boolean",
                    "description": "Determines if the SSL certificate should be validated for expiry.\n",
                    "deprecationMessage": "The property `ssl_check` is deprecated and it's ignored by the Checkly Public API. It will be removed in a future version."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags for organizing and filtering checks.\n"
                },
                "teardownSnippetId": {
                    "type": "integer",
                    "description": "An ID reference to a snippet to use in the teardown phase of an API check.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the check. Possible values are `API`, and `BROWSER`.\n"
                },
                "useGlobalAlertSettings": {
                    "type": "boolean",
                    "description": "When true, the account level alert settings will be used, not the alert setting defined on this check.\n"
                }
            },
            "required": [
                "activated",
                "alertSettings",
                "frequency",
                "name",
                "type"
            ],
            "inputProperties": {
                "activated": {
                    "type": "boolean",
                    "description": "Determines if the check is running or not. Possible values `true`, and `false`.\n"
                },
                "alertChannelSubscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/checkly:index/CheckAlertChannelSubscription:CheckAlertChannelSubscription"
                    }
                },
                "alertSettings": {
                    "$ref": "#/types/checkly:index/CheckAlertSettings:CheckAlertSettings"
                },
                "degradedResponseTime": {
                    "type": "integer",
                    "description": "The response time in milliseconds starting from which a check should be considered degraded. Possible values are between\n0 and 30000. (Default `15000`).\n"
                },
                "doubleCheck": {
                    "type": "boolean",
                    "description": "Setting this to `true` will trigger a retry when a check fails from the failing region and another, randomly selected\nregion before marking the check as failed.\n"
                },
                "environmentVariables": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Key/value pairs for setting environment variables during check execution. These are only relevant for browser checks.\nUse global environment variables whenever possible.\n"
                },
                "frequency": {
                    "type": "integer",
                    "description": "The frequency in minutes to run the check. Possible values are `0`, `1`, `5`, `10`, `15`, `30`, `60`, `720`, and `1440`.\n"
                },
                "frequencyOffset": {
                    "type": "integer",
                    "description": "This property only valid for API high frequency checks. To create a hight frequency check, the property `frequency` must\nbe `0` and `frequency_offset` could be `10`, `20` or `30`.\n"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The id of the check group this check is part of.\n"
                },
                "groupOrder": {
                    "type": "integer",
                    "description": "The position of this check in a check group. It determines in what order checks are run when a group is triggered from\nthe API or from CI/CD.\n"
                },
                "localSetupScript": {
                    "type": "string",
                    "description": "A valid piece of Node.js code to run in the setup phase.\n"
                },
                "localTeardownScript": {
                    "type": "string",
                    "description": "A valid piece of Node.js code to run in the teardown phase.\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of one or more data center locations where to run the this check. (Default [\"us-east-1\"])\n"
                },
                "maxResponseTime": {
                    "type": "integer",
                    "description": "The response time in milliseconds starting from which a check should be considered failing. Possible values are between\n0 and 30000. (Default `30000`).\n"
                },
                "muted": {
                    "type": "boolean",
                    "description": "Determines if any notifications will be sent out when a check fails/degrades/recovers.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the check.\n"
                },
                "request": {
                    "$ref": "#/types/checkly:index/CheckRequest:CheckRequest",
                    "description": "An API check might have one request config.\n"
                },
                "runtimeId": {
                    "type": "string",
                    "description": "The id of the runtime to use for this check.\n"
                },
                "script": {
                    "type": "string",
                    "description": "A valid piece of Node.js JavaScript code describing a browser interaction with the Puppeteer/Playwright framework or a\nreference to an external JavaScript file.\n"
                },
                "setupSnippetId": {
                    "type": "integer",
                    "description": "An ID reference to a snippet to use in the setup phase of an API check.\n"
                },
                "shouldFail": {
                    "type": "boolean",
                    "description": "Allows to invert the behaviour of when a check is considered to fail. Allows for validating error status like 404.\n"
                },
                "sslCheck": {
                    "type": "boolean",
                    "description": "Determines if the SSL certificate should be validated for expiry.\n",
                    "deprecationMessage": "The property `ssl_check` is deprecated and it's ignored by the Checkly Public API. It will be removed in a future version."
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of tags for organizing and filtering checks.\n"
                },
                "teardownSnippetId": {
                    "type": "integer",
                    "description": "An ID reference to a snippet to use in the teardown phase of an API check.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the check. Possible values are `API`, and `BROWSER`.\n"
                },
                "useGlobalAlertSettings": {
                    "type": "boolean",
                    "description": "When true, the account level alert settings will be used, not the alert setting defined on this check.\n"
                }
            },
            "requiredInputs": [
                "activated",
                "frequency",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Check resources.\n",
                "properties": {
                    "activated": {
                        "type": "boolean",
                        "description": "Determines if the check is running or not. Possible values `true`, and `false`.\n"
                    },
                    "alertChannelSubscriptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/checkly:index/CheckAlertChannelSubscription:CheckAlertChannelSubscription"
                        }
                    },
                    "alertSettings": {
                        "$ref": "#/types/checkly:index/CheckAlertSettings:CheckAlertSettings"
                    },
                    "degradedResponseTime": {
                        "type": "integer",
                        "description": "The response time in milliseconds starting from which a check should be considered degraded. Possible values are between\n0 and 30000. (Default `15000`).\n"
                    },
                    "doubleCheck": {
                        "type": "boolean",
                        "description": "Setting this to `true` will trigger a retry when a check fails from the failing region and another, randomly selected\nregion before marking the check as failed.\n"
                    },
                    "environmentVariables": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Key/value pairs for setting environment variables during check execution. These are only relevant for browser checks.\nUse global environment variables whenever possible.\n"
                    },
                    "frequency": {
                        "type": "integer",
                        "description": "The frequency in minutes to run the check. Possible values are `0`, `1`, `5`, `10`, `15`, `30`, `60`, `720`, and `1440`.\n"
                    },
                    "frequencyOffset": {
                        "type": "integer",
                        "description": "This property only valid for API high frequency checks. To create a hight frequency check, the property `frequency` must\nbe `0` and `frequency_offset` could be `10`, `20` or `30`.\n"
                    },
                    "groupId": {
                        "type": "integer",
                        "description": "The id of the check group this check is part of.\n"
                    },
                    "groupOrder": {
                        "type": "integer",
                        "description": "The position of this check in a check group. It determines in what order checks are run when a group is triggered from\nthe API or from CI/CD.\n"
                    },
                    "localSetupScript": {
                        "type": "string",
                        "description": "A valid piece of Node.js code to run in the setup phase.\n"
                    },
                    "localTeardownScript": {
                        "type": "string",
                        "description": "A valid piece of Node.js code to run in the teardown phase.\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of one or more data center locations where to run the this check. (Default [\"us-east-1\"])\n"
                    },
                    "maxResponseTime": {
                        "type": "integer",
                        "description": "The response time in milliseconds starting from which a check should be considered failing. Possible values are between\n0 and 30000. (Default `30000`).\n"
                    },
                    "muted": {
                        "type": "boolean",
                        "description": "Determines if any notifications will be sent out when a check fails/degrades/recovers.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the check.\n"
                    },
                    "request": {
                        "$ref": "#/types/checkly:index/CheckRequest:CheckRequest",
                        "description": "An API check might have one request config.\n"
                    },
                    "runtimeId": {
                        "type": "string",
                        "description": "The id of the runtime to use for this check.\n"
                    },
                    "script": {
                        "type": "string",
                        "description": "A valid piece of Node.js JavaScript code describing a browser interaction with the Puppeteer/Playwright framework or a\nreference to an external JavaScript file.\n"
                    },
                    "setupSnippetId": {
                        "type": "integer",
                        "description": "An ID reference to a snippet to use in the setup phase of an API check.\n"
                    },
                    "shouldFail": {
                        "type": "boolean",
                        "description": "Allows to invert the behaviour of when a check is considered to fail. Allows for validating error status like 404.\n"
                    },
                    "sslCheck": {
                        "type": "boolean",
                        "description": "Determines if the SSL certificate should be validated for expiry.\n",
                        "deprecationMessage": "The property `ssl_check` is deprecated and it's ignored by the Checkly Public API. It will be removed in a future version."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of tags for organizing and filtering checks.\n"
                    },
                    "teardownSnippetId": {
                        "type": "integer",
                        "description": "An ID reference to a snippet to use in the teardown phase of an API check.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the check. Possible values are `API`, and `BROWSER`.\n"
                    },
                    "useGlobalAlertSettings": {
                        "type": "boolean",
                        "description": "When true, the account level alert settings will be used, not the alert setting defined on this check.\n"
                    }
                },
                "type": "object"
            }
        },
        "checkly:index/checkGroup:CheckGroup": {
            "properties": {
                "activated": {
                    "type": "boolean",
                    "description": "Determines if the checks in the group are running or not.\n"
                },
                "alertChannelSubscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/checkly:index/CheckGroupAlertChannelSubscription:CheckGroupAlertChannelSubscription"
                    }
                },
                "alertSettings": {
                    "$ref": "#/types/checkly:index/CheckGroupAlertSettings:CheckGroupAlertSettings"
                },
                "apiCheckDefaults": {
                    "$ref": "#/types/checkly:index/CheckGroupApiCheckDefaults:CheckGroupApiCheckDefaults"
                },
                "concurrency": {
                    "type": "integer",
                    "description": "Determines how many checks are run concurrently when triggering a check group from CI/CD or through the API.\n"
                },
                "doubleCheck": {
                    "type": "boolean",
                    "description": "Setting this to `true` will trigger a retry when a check fails from the failing region and another, randomly selected\nregion before marking the check as failed.\n"
                },
                "environmentVariables": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Key/value pairs for setting environment variables during check execution. These are only relevant for browser checks.\nUse global environment variables whenever possible.\n"
                },
                "localSetupScript": {
                    "type": "string",
                    "description": "A valid piece of Node.js code to run in the setup phase of an API check in this group.\n"
                },
                "localTeardownScript": {
                    "type": "string",
                    "description": "A valid piece of Node.js code to run in the teardown phase of an API check in this group.\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of one or more data center locations where to run the checks.\n"
                },
                "muted": {
                    "type": "boolean",
                    "description": "Determines if any notifications will be sent out when a check in this group fails and/or recovers.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the check group.\n"
                },
                "runtimeId": {
                    "type": "string",
                    "description": "The id of the runtime to use for this group.\n"
                },
                "setupSnippetId": {
                    "type": "integer",
                    "description": "An ID reference to a snippet to use in the setup phase of an API check.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for organizing and filtering checks.\n"
                },
                "teardownSnippetId": {
                    "type": "integer",
                    "description": "An ID reference to a snippet to use in the teardown phase of an API check.\n"
                },
                "useGlobalAlertSettings": {
                    "type": "boolean",
                    "description": "When true, the account level alert settings will be used, not the alert setting defined on this check group.\n"
                }
            },
            "required": [
                "activated",
                "alertSettings",
                "apiCheckDefaults",
                "concurrency",
                "locations",
                "name"
            ],
            "inputProperties": {
                "activated": {
                    "type": "boolean",
                    "description": "Determines if the checks in the group are running or not.\n"
                },
                "alertChannelSubscriptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/checkly:index/CheckGroupAlertChannelSubscription:CheckGroupAlertChannelSubscription"
                    }
                },
                "alertSettings": {
                    "$ref": "#/types/checkly:index/CheckGroupAlertSettings:CheckGroupAlertSettings"
                },
                "apiCheckDefaults": {
                    "$ref": "#/types/checkly:index/CheckGroupApiCheckDefaults:CheckGroupApiCheckDefaults"
                },
                "concurrency": {
                    "type": "integer",
                    "description": "Determines how many checks are run concurrently when triggering a check group from CI/CD or through the API.\n"
                },
                "doubleCheck": {
                    "type": "boolean",
                    "description": "Setting this to `true` will trigger a retry when a check fails from the failing region and another, randomly selected\nregion before marking the check as failed.\n"
                },
                "environmentVariables": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Key/value pairs for setting environment variables during check execution. These are only relevant for browser checks.\nUse global environment variables whenever possible.\n"
                },
                "localSetupScript": {
                    "type": "string",
                    "description": "A valid piece of Node.js code to run in the setup phase of an API check in this group.\n"
                },
                "localTeardownScript": {
                    "type": "string",
                    "description": "A valid piece of Node.js code to run in the teardown phase of an API check in this group.\n"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An array of one or more data center locations where to run the checks.\n"
                },
                "muted": {
                    "type": "boolean",
                    "description": "Determines if any notifications will be sent out when a check in this group fails and/or recovers.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the check group.\n"
                },
                "runtimeId": {
                    "type": "string",
                    "description": "The id of the runtime to use for this group.\n"
                },
                "setupSnippetId": {
                    "type": "integer",
                    "description": "An ID reference to a snippet to use in the setup phase of an API check.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags for organizing and filtering checks.\n"
                },
                "teardownSnippetId": {
                    "type": "integer",
                    "description": "An ID reference to a snippet to use in the teardown phase of an API check.\n"
                },
                "useGlobalAlertSettings": {
                    "type": "boolean",
                    "description": "When true, the account level alert settings will be used, not the alert setting defined on this check group.\n"
                }
            },
            "requiredInputs": [
                "activated",
                "concurrency",
                "locations"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CheckGroup resources.\n",
                "properties": {
                    "activated": {
                        "type": "boolean",
                        "description": "Determines if the checks in the group are running or not.\n"
                    },
                    "alertChannelSubscriptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/checkly:index/CheckGroupAlertChannelSubscription:CheckGroupAlertChannelSubscription"
                        }
                    },
                    "alertSettings": {
                        "$ref": "#/types/checkly:index/CheckGroupAlertSettings:CheckGroupAlertSettings"
                    },
                    "apiCheckDefaults": {
                        "$ref": "#/types/checkly:index/CheckGroupApiCheckDefaults:CheckGroupApiCheckDefaults"
                    },
                    "concurrency": {
                        "type": "integer",
                        "description": "Determines how many checks are run concurrently when triggering a check group from CI/CD or through the API.\n"
                    },
                    "doubleCheck": {
                        "type": "boolean",
                        "description": "Setting this to `true` will trigger a retry when a check fails from the failing region and another, randomly selected\nregion before marking the check as failed.\n"
                    },
                    "environmentVariables": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Key/value pairs for setting environment variables during check execution. These are only relevant for browser checks.\nUse global environment variables whenever possible.\n"
                    },
                    "localSetupScript": {
                        "type": "string",
                        "description": "A valid piece of Node.js code to run in the setup phase of an API check in this group.\n"
                    },
                    "localTeardownScript": {
                        "type": "string",
                        "description": "A valid piece of Node.js code to run in the teardown phase of an API check in this group.\n"
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of one or more data center locations where to run the checks.\n"
                    },
                    "muted": {
                        "type": "boolean",
                        "description": "Determines if any notifications will be sent out when a check in this group fails and/or recovers.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the check group.\n"
                    },
                    "runtimeId": {
                        "type": "string",
                        "description": "The id of the runtime to use for this group.\n"
                    },
                    "setupSnippetId": {
                        "type": "integer",
                        "description": "An ID reference to a snippet to use in the setup phase of an API check.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags for organizing and filtering checks.\n"
                    },
                    "teardownSnippetId": {
                        "type": "integer",
                        "description": "An ID reference to a snippet to use in the teardown phase of an API check.\n"
                    },
                    "useGlobalAlertSettings": {
                        "type": "boolean",
                        "description": "When true, the account level alert settings will be used, not the alert setting defined on this check group.\n"
                    }
                },
                "type": "object"
            }
        },
        "checkly:index/dashboard:Dashboard": {
            "properties": {
                "customDomain": {
                    "type": "string",
                    "description": "A custom user domain, e.g. 'status.example.com'. See the docs on updating your DNS and SSL usage.\n"
                },
                "customUrl": {
                    "type": "string",
                    "description": "A subdomain name under 'checklyhq.com'. Needs to be unique across all users.\n"
                },
                "header": {
                    "type": "string",
                    "description": "A piece of text displayed at the top of your dashboard.\n"
                },
                "hideTags": {
                    "type": "boolean",
                    "description": "Show or hide the tags on the dashboard.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "A URL pointing to an image file.\n"
                },
                "paginate": {
                    "type": "boolean",
                    "description": "Determines if pagination is on or off.\n"
                },
                "paginationRate": {
                    "type": "integer",
                    "description": "How often to trigger pagination in seconds. Possible values `30`, `60` and `300`.\n"
                },
                "refreshRate": {
                    "type": "integer",
                    "description": "How often to refresh the dashboard in seconds. Possible values `60`, '300' and `600`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of one or more tags that filter which checks to display on the dashboard.\n"
                },
                "width": {
                    "type": "string",
                    "description": "Determines whether to use the full screen or focus in the center. Possible values `FULL` and `960PX`.\n"
                }
            },
            "required": [
                "customUrl"
            ],
            "inputProperties": {
                "customDomain": {
                    "type": "string",
                    "description": "A custom user domain, e.g. 'status.example.com'. See the docs on updating your DNS and SSL usage.\n"
                },
                "customUrl": {
                    "type": "string",
                    "description": "A subdomain name under 'checklyhq.com'. Needs to be unique across all users.\n"
                },
                "header": {
                    "type": "string",
                    "description": "A piece of text displayed at the top of your dashboard.\n"
                },
                "hideTags": {
                    "type": "boolean",
                    "description": "Show or hide the tags on the dashboard.\n"
                },
                "logo": {
                    "type": "string",
                    "description": "A URL pointing to an image file.\n"
                },
                "paginate": {
                    "type": "boolean",
                    "description": "Determines if pagination is on or off.\n"
                },
                "paginationRate": {
                    "type": "integer",
                    "description": "How often to trigger pagination in seconds. Possible values `30`, `60` and `300`.\n"
                },
                "refreshRate": {
                    "type": "integer",
                    "description": "How often to refresh the dashboard in seconds. Possible values `60`, '300' and `600`.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of one or more tags that filter which checks to display on the dashboard.\n"
                },
                "width": {
                    "type": "string",
                    "description": "Determines whether to use the full screen or focus in the center. Possible values `FULL` and `960PX`.\n"
                }
            },
            "requiredInputs": [
                "customUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dashboard resources.\n",
                "properties": {
                    "customDomain": {
                        "type": "string",
                        "description": "A custom user domain, e.g. 'status.example.com'. See the docs on updating your DNS and SSL usage.\n"
                    },
                    "customUrl": {
                        "type": "string",
                        "description": "A subdomain name under 'checklyhq.com'. Needs to be unique across all users.\n"
                    },
                    "header": {
                        "type": "string",
                        "description": "A piece of text displayed at the top of your dashboard.\n"
                    },
                    "hideTags": {
                        "type": "boolean",
                        "description": "Show or hide the tags on the dashboard.\n"
                    },
                    "logo": {
                        "type": "string",
                        "description": "A URL pointing to an image file.\n"
                    },
                    "paginate": {
                        "type": "boolean",
                        "description": "Determines if pagination is on or off.\n"
                    },
                    "paginationRate": {
                        "type": "integer",
                        "description": "How often to trigger pagination in seconds. Possible values `30`, `60` and `300`.\n"
                    },
                    "refreshRate": {
                        "type": "integer",
                        "description": "How often to refresh the dashboard in seconds. Possible values `60`, '300' and `600`.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of one or more tags that filter which checks to display on the dashboard.\n"
                    },
                    "width": {
                        "type": "string",
                        "description": "Determines whether to use the full screen or focus in the center. Possible values `FULL` and `960PX`.\n"
                    }
                },
                "type": "object"
            }
        },
        "checkly:index/environmentVariable:EnvironmentVariable": {
            "properties": {
                "key": {
                    "type": "string"
                },
                "locked": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "key",
                "value"
            ],
            "inputProperties": {
                "key": {
                    "type": "string"
                },
                "locked": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "key",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EnvironmentVariable resources.\n",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "locked": {
                        "type": "boolean"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "checkly:index/maintenanceWindow:MaintenanceWindow": {
            "properties": {
                "endsAt": {
                    "type": "string",
                    "description": "The end date of the maintenance window.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The maintenance window name.\n"
                },
                "repeatEndsAt": {
                    "type": "string",
                    "description": "The date on which the maintenance window should stop repeating.\n"
                },
                "repeatInterval": {
                    "type": "integer",
                    "description": "The repeat interval of the maintenance window from the first occurrence.\n"
                },
                "repeatUnit": {
                    "type": "string",
                    "description": "The repeat cadence for the maintenance window. Possible values `DAY`, `WEEK` and `MONTH`.\n"
                },
                "startsAt": {
                    "type": "string",
                    "description": "The start date of the maintenance window.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names of the checks and groups maintenance window should apply to.\n"
                }
            },
            "required": [
                "endsAt",
                "name",
                "startsAt"
            ],
            "inputProperties": {
                "endsAt": {
                    "type": "string",
                    "description": "The end date of the maintenance window.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The maintenance window name.\n"
                },
                "repeatEndsAt": {
                    "type": "string",
                    "description": "The date on which the maintenance window should stop repeating.\n"
                },
                "repeatInterval": {
                    "type": "integer",
                    "description": "The repeat interval of the maintenance window from the first occurrence.\n"
                },
                "repeatUnit": {
                    "type": "string",
                    "description": "The repeat cadence for the maintenance window. Possible values `DAY`, `WEEK` and `MONTH`.\n"
                },
                "startsAt": {
                    "type": "string",
                    "description": "The start date of the maintenance window.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The names of the checks and groups maintenance window should apply to.\n"
                }
            },
            "requiredInputs": [
                "endsAt",
                "startsAt"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MaintenanceWindow resources.\n",
                "properties": {
                    "endsAt": {
                        "type": "string",
                        "description": "The end date of the maintenance window.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The maintenance window name.\n"
                    },
                    "repeatEndsAt": {
                        "type": "string",
                        "description": "The date on which the maintenance window should stop repeating.\n"
                    },
                    "repeatInterval": {
                        "type": "integer",
                        "description": "The repeat interval of the maintenance window from the first occurrence.\n"
                    },
                    "repeatUnit": {
                        "type": "string",
                        "description": "The repeat cadence for the maintenance window. Possible values `DAY`, `WEEK` and `MONTH`.\n"
                    },
                    "startsAt": {
                        "type": "string",
                        "description": "The start date of the maintenance window.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The names of the checks and groups maintenance window should apply to.\n"
                    }
                },
                "type": "object"
            }
        },
        "checkly:index/snippet:Snippet": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the snippet\n"
                },
                "script": {
                    "type": "string",
                    "description": "Your Node.js code that interacts with the API check lifecycle, or functions as a partial for browser checks.\n"
                }
            },
            "required": [
                "name",
                "script"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the snippet\n"
                },
                "script": {
                    "type": "string",
                    "description": "Your Node.js code that interacts with the API check lifecycle, or functions as a partial for browser checks.\n"
                }
            },
            "requiredInputs": [
                "script"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Snippet resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the snippet\n"
                    },
                    "script": {
                        "type": "string",
                        "description": "Your Node.js code that interacts with the API check lifecycle, or functions as a partial for browser checks.\n"
                    }
                },
                "type": "object"
            }
        },
        "checkly:index/triggerCheck:TriggerCheck": {
            "properties": {
                "checkId": {
                    "type": "string",
                    "description": "The id of the check that you want to attach the trigger to.\n"
                },
                "token": {
                    "type": "string",
                    "description": "The token value created to trigger the check\n"
                },
                "url": {
                    "type": "string",
                    "description": "The request URL to trigger the check run.\n"
                }
            },
            "required": [
                "checkId",
                "token",
                "url"
            ],
            "inputProperties": {
                "checkId": {
                    "type": "string",
                    "description": "The id of the check that you want to attach the trigger to.\n"
                },
                "token": {
                    "type": "string",
                    "description": "The token value created to trigger the check\n"
                },
                "url": {
                    "type": "string",
                    "description": "The request URL to trigger the check run.\n"
                }
            },
            "requiredInputs": [
                "checkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TriggerCheck resources.\n",
                "properties": {
                    "checkId": {
                        "type": "string",
                        "description": "The id of the check that you want to attach the trigger to.\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "The token value created to trigger the check\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The request URL to trigger the check run.\n"
                    }
                },
                "type": "object"
            }
        },
        "checkly:index/triggerCheckGroup:TriggerCheckGroup": {
            "properties": {
                "groupId": {
                    "type": "integer",
                    "description": "The id of the group that you want to attach the trigger to.\n"
                },
                "token": {
                    "type": "string",
                    "description": "The token value created to trigger the group\n"
                },
                "url": {
                    "type": "string",
                    "description": "The request URL to trigger the group run.\n"
                }
            },
            "required": [
                "groupId",
                "token",
                "url"
            ],
            "inputProperties": {
                "groupId": {
                    "type": "integer",
                    "description": "The id of the group that you want to attach the trigger to.\n"
                },
                "token": {
                    "type": "string",
                    "description": "The token value created to trigger the group\n"
                },
                "url": {
                    "type": "string",
                    "description": "The request URL to trigger the group run.\n"
                }
            },
            "requiredInputs": [
                "groupId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TriggerCheckGroup resources.\n",
                "properties": {
                    "groupId": {
                        "type": "integer",
                        "description": "The id of the group that you want to attach the trigger to.\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "The token value created to trigger the group\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The request URL to trigger the group run.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/checkly/pulumi-checkly/sdk/go/checkly"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Checkly monitoring resources.",
            "packageName": "@checkly/pulumi",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/checkly/terraform-provider-checkly)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-checkly` repo](https://github.com/pulumi/pulumi-checkly/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`checkly/terraform-provider-checkly` repo](https://github.com/checkly/terraform-provider-checkly/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/checkly/terraform-provider-checkly)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-checkly` repo](https://github.com/pulumi/pulumi-checkly/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`checkly/terraform-provider-checkly` repo](https://github.com/checkly/terraform-provider-checkly/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}