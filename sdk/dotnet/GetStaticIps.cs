// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Checkly
{
    public static class GetStaticIps
    {
        public static Task<GetStaticIpsResult> InvokeAsync(GetStaticIpsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStaticIpsResult>("checkly:index/getStaticIps:getStaticIps", args ?? new GetStaticIpsArgs(), options.WithDefaults());

        public static Output<GetStaticIpsResult> Invoke(GetStaticIpsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStaticIpsResult>("checkly:index/getStaticIps:getStaticIps", args ?? new GetStaticIpsInvokeArgs(), options.WithDefaults());

        public static Output<GetStaticIpsResult> Invoke(GetStaticIpsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetStaticIpsResult>("checkly:index/getStaticIps:getStaticIps", args ?? new GetStaticIpsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStaticIpsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the IP families you want to get static IPs for. Only `IPv6` or `IPv4` are valid options.
        /// </summary>
        [Input("ipFamily")]
        public string? IpFamily { get; set; }

        [Input("locations")]
        private List<string>? _locations;

        /// <summary>
        /// Specify the locations you want to get static IPs for.
        /// </summary>
        public List<string> Locations
        {
            get => _locations ?? (_locations = new List<string>());
            set => _locations = value;
        }

        public GetStaticIpsArgs()
        {
        }
        public static new GetStaticIpsArgs Empty => new GetStaticIpsArgs();
    }

    public sealed class GetStaticIpsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Specify the IP families you want to get static IPs for. Only `IPv6` or `IPv4` are valid options.
        /// </summary>
        [Input("ipFamily")]
        public Input<string>? IpFamily { get; set; }

        [Input("locations")]
        private InputList<string>? _locations;

        /// <summary>
        /// Specify the locations you want to get static IPs for.
        /// </summary>
        public InputList<string> Locations
        {
            get => _locations ?? (_locations = new InputList<string>());
            set => _locations = value;
        }

        public GetStaticIpsInvokeArgs()
        {
        }
        public static new GetStaticIpsInvokeArgs Empty => new GetStaticIpsInvokeArgs();
    }


    [OutputType]
    public sealed class GetStaticIpsResult
    {
        /// <summary>
        /// Static IP addresses for Checkly's runner infrastructure.
        /// </summary>
        public readonly ImmutableArray<string> Addresses;
        /// <summary>
        /// ID of the static IPs data source.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Specify the IP families you want to get static IPs for. Only `IPv6` or `IPv4` are valid options.
        /// </summary>
        public readonly string? IpFamily;
        /// <summary>
        /// Specify the locations you want to get static IPs for.
        /// </summary>
        public readonly ImmutableArray<string> Locations;

        [OutputConstructor]
        private GetStaticIpsResult(
            ImmutableArray<string> addresses,

            string id,

            string? ipFamily,

            ImmutableArray<string> locations)
        {
            Addresses = addresses;
            Id = id;
            IpFamily = ipFamily;
            Locations = locations;
        }
    }
}
