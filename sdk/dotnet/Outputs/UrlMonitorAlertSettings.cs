// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Checkly.Outputs
{

    [OutputType]
    public sealed class UrlMonitorAlertSettings
    {
        /// <summary>
        /// Determines what type of escalation to use. Possible values are `RUN_BASED` and `TIME_BASED`.
        /// </summary>
        public readonly string EscalationType;
        /// <summary>
        /// Configuration for parallel run failure threshold.
        /// </summary>
        public readonly ImmutableArray<Outputs.UrlMonitorAlertSettingsParallelRunFailureThreshold> ParallelRunFailureThresholds;
        /// <summary>
        /// Defines how often to send reminder notifications after initial alert.
        /// </summary>
        public readonly ImmutableArray<Outputs.UrlMonitorAlertSettingsReminder> Reminders;
        /// <summary>
        /// Configuration for run-based escalation.
        /// </summary>
        public readonly ImmutableArray<Outputs.UrlMonitorAlertSettingsRunBasedEscalation> RunBasedEscalations;
        /// <summary>
        /// Configuration for time-based escalation.
        /// </summary>
        public readonly ImmutableArray<Outputs.UrlMonitorAlertSettingsTimeBasedEscalation> TimeBasedEscalations;

        [OutputConstructor]
        private UrlMonitorAlertSettings(
            string escalationType,

            ImmutableArray<Outputs.UrlMonitorAlertSettingsParallelRunFailureThreshold> parallelRunFailureThresholds,

            ImmutableArray<Outputs.UrlMonitorAlertSettingsReminder> reminders,

            ImmutableArray<Outputs.UrlMonitorAlertSettingsRunBasedEscalation> runBasedEscalations,

            ImmutableArray<Outputs.UrlMonitorAlertSettingsTimeBasedEscalation> timeBasedEscalations)
        {
            EscalationType = escalationType;
            ParallelRunFailureThresholds = parallelRunFailureThresholds;
            Reminders = reminders;
            RunBasedEscalations = runBasedEscalations;
            TimeBasedEscalations = timeBasedEscalations;
        }
    }
}
