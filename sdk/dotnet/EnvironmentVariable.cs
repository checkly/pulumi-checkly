// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Checkly
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Checkly = Pulumi.Checkly;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         // Simple Enviroment Variable example
    ///         var variable_1 = new Checkly.EnvironmentVariable("variable-1", new Checkly.EnvironmentVariableArgs
    ///         {
    ///             Key = "API_KEY",
    ///             Locked = true,
    ///             Value = "loZd9hOGHDUrGvmW",
    ///         });
    ///         var variable_2 = new Checkly.EnvironmentVariable("variable-2", new Checkly.EnvironmentVariableArgs
    ///         {
    ///             Key = "API_URL",
    ///             Value = "http://localhost:3000",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [ChecklyResourceType("checkly:index/environmentVariable:EnvironmentVariable")]
    public partial class EnvironmentVariable : Pulumi.CustomResource
    {
        [Output("key")]
        public Output<string> Key { get; private set; } = null!;

        [Output("locked")]
        public Output<bool?> Locked { get; private set; } = null!;

        [Output("value")]
        public Output<string> Value { get; private set; } = null!;


        /// <summary>
        /// Create a EnvironmentVariable resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EnvironmentVariable(string name, EnvironmentVariableArgs args, CustomResourceOptions? options = null)
            : base("checkly:index/environmentVariable:EnvironmentVariable", name, args ?? new EnvironmentVariableArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EnvironmentVariable(string name, Input<string> id, EnvironmentVariableState? state = null, CustomResourceOptions? options = null)
            : base("checkly:index/environmentVariable:EnvironmentVariable", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/checkly/pulumi-checkly/releases/${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EnvironmentVariable resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EnvironmentVariable Get(string name, Input<string> id, EnvironmentVariableState? state = null, CustomResourceOptions? options = null)
        {
            return new EnvironmentVariable(name, id, state, options);
        }
    }

    public sealed class EnvironmentVariableArgs : Pulumi.ResourceArgs
    {
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("locked")]
        public Input<bool>? Locked { get; set; }

        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        public EnvironmentVariableArgs()
        {
        }
    }

    public sealed class EnvironmentVariableState : Pulumi.ResourceArgs
    {
        [Input("key")]
        public Input<string>? Key { get; set; }

        [Input("locked")]
        public Input<bool>? Locked { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public EnvironmentVariableState()
        {
        }
    }
}
