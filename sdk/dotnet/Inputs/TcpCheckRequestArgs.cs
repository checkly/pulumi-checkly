// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Checkly.Inputs
{

    public sealed class TcpCheckRequestArgs : global::Pulumi.ResourceArgs
    {
        [Input("assertions")]
        private InputList<Inputs.TcpCheckRequestAssertionArgs>? _assertions;

        /// <summary>
        /// A request can have multiple assertions.
        /// </summary>
        public InputList<Inputs.TcpCheckRequestAssertionArgs> Assertions
        {
            get => _assertions ?? (_assertions = new InputList<Inputs.TcpCheckRequestAssertionArgs>());
            set => _assertions = value;
        }

        /// <summary>
        /// The data to send to the target host.
        /// </summary>
        [Input("data")]
        public Input<string>? Data { get; set; }

        /// <summary>
        /// The hostname or IP to connect to. Do not include a scheme or a port in this value.
        /// </summary>
        [Input("hostname", required: true)]
        public Input<string> Hostname { get; set; } = null!;

        /// <summary>
        /// The IP family to use when executing the TCP check. The value can be either `IPv4` or `IPv6`.
        /// </summary>
        [Input("ipFamily")]
        public Input<string>? IpFamily { get; set; }

        /// <summary>
        /// The port number to connect to.
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        public TcpCheckRequestArgs()
        {
        }
        public static new TcpCheckRequestArgs Empty => new TcpCheckRequestArgs();
    }
}
