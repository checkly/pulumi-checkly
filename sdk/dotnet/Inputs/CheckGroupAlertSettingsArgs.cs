// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Checkly.Inputs
{

    public sealed class CheckGroupAlertSettingsArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Determines what type of escalation to use. Possible values are `RUN_BASED` or `TIME_BASED`.
        /// </summary>
        [Input("escalationType")]
        public Input<string>? EscalationType { get; set; }

        [Input("reminders")]
        private InputList<Inputs.CheckGroupAlertSettingsReminderArgs>? _reminders;

        /// <summary>
        /// . Possible arguments:
        /// </summary>
        public InputList<Inputs.CheckGroupAlertSettingsReminderArgs> Reminders
        {
            get => _reminders ?? (_reminders = new InputList<Inputs.CheckGroupAlertSettingsReminderArgs>());
            set => _reminders = value;
        }

        [Input("runBasedEscalations")]
        private InputList<Inputs.CheckGroupAlertSettingsRunBasedEscalationArgs>? _runBasedEscalations;

        /// <summary>
        /// . Possible arguments:
        /// </summary>
        public InputList<Inputs.CheckGroupAlertSettingsRunBasedEscalationArgs> RunBasedEscalations
        {
            get => _runBasedEscalations ?? (_runBasedEscalations = new InputList<Inputs.CheckGroupAlertSettingsRunBasedEscalationArgs>());
            set => _runBasedEscalations = value;
        }

        [Input("sslCertificates")]
        private InputList<Inputs.CheckGroupAlertSettingsSslCertificateArgs>? _sslCertificates;

        /// <summary>
        /// At what interval the reminders should be send.  Possible arguments:
        /// </summary>
        public InputList<Inputs.CheckGroupAlertSettingsSslCertificateArgs> SslCertificates
        {
            get => _sslCertificates ?? (_sslCertificates = new InputList<Inputs.CheckGroupAlertSettingsSslCertificateArgs>());
            set => _sslCertificates = value;
        }

        [Input("timeBasedEscalations")]
        private InputList<Inputs.CheckGroupAlertSettingsTimeBasedEscalationArgs>? _timeBasedEscalations;

        /// <summary>
        /// . Possible arguments:
        /// </summary>
        public InputList<Inputs.CheckGroupAlertSettingsTimeBasedEscalationArgs> TimeBasedEscalations
        {
            get => _timeBasedEscalations ?? (_timeBasedEscalations = new InputList<Inputs.CheckGroupAlertSettingsTimeBasedEscalationArgs>());
            set => _timeBasedEscalations = value;
        }

        public CheckGroupAlertSettingsArgs()
        {
        }
    }
}
