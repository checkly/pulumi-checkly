// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as checkly from "@pulumi/checkly";
 *
 * const maintenance_1 = new checkly.MaintenanceWindow("maintenance-1", {
 *     endsAt: "2014-08-25T00:00:00.000Z",
 *     repeatEndsAt: "2014-08-24T00:00:00.000Z",
 *     repeatInterval: 1,
 *     repeatUnit: "MONTH",
 *     startsAt: "2014-08-24T00:00:00.000Z",
 *     tags: ["production"],
 * });
 * ```
 */
export class MaintenanceWindow extends pulumi.CustomResource {
    /**
     * Get an existing MaintenanceWindow resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MaintenanceWindowState, opts?: pulumi.CustomResourceOptions): MaintenanceWindow {
        return new MaintenanceWindow(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'checkly:index/maintenanceWindow:MaintenanceWindow';

    /**
     * Returns true if the given object is an instance of MaintenanceWindow.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MaintenanceWindow {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MaintenanceWindow.__pulumiType;
    }

    /**
     * The end date of the maintenance window.
     */
    public readonly endsAt!: pulumi.Output<string>;
    /**
     * The maintenance window name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The date on which the maintenance window should stop repeating.
     */
    public readonly repeatEndsAt!: pulumi.Output<string | undefined>;
    /**
     * The repeat interval of the maintenance window from the first occurrence.
     */
    public readonly repeatInterval!: pulumi.Output<number | undefined>;
    /**
     * The repeat cadence for the maintenance window. Possible values `DAY`, `WEEK` and `MONTH`.
     */
    public readonly repeatUnit!: pulumi.Output<string | undefined>;
    /**
     * The start date of the maintenance window.
     */
    public readonly startsAt!: pulumi.Output<string>;
    /**
     * The names of the checks and groups maintenance window should apply to.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;

    /**
     * Create a MaintenanceWindow resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MaintenanceWindowArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MaintenanceWindowArgs | MaintenanceWindowState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MaintenanceWindowState | undefined;
            resourceInputs["endsAt"] = state ? state.endsAt : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["repeatEndsAt"] = state ? state.repeatEndsAt : undefined;
            resourceInputs["repeatInterval"] = state ? state.repeatInterval : undefined;
            resourceInputs["repeatUnit"] = state ? state.repeatUnit : undefined;
            resourceInputs["startsAt"] = state ? state.startsAt : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as MaintenanceWindowArgs | undefined;
            if ((!args || args.endsAt === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endsAt'");
            }
            if ((!args || args.startsAt === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startsAt'");
            }
            resourceInputs["endsAt"] = args ? args.endsAt : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["repeatEndsAt"] = args ? args.repeatEndsAt : undefined;
            resourceInputs["repeatInterval"] = args ? args.repeatInterval : undefined;
            resourceInputs["repeatUnit"] = args ? args.repeatUnit : undefined;
            resourceInputs["startsAt"] = args ? args.startsAt : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MaintenanceWindow.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MaintenanceWindow resources.
 */
export interface MaintenanceWindowState {
    /**
     * The end date of the maintenance window.
     */
    endsAt?: pulumi.Input<string>;
    /**
     * The maintenance window name.
     */
    name?: pulumi.Input<string>;
    /**
     * The date on which the maintenance window should stop repeating.
     */
    repeatEndsAt?: pulumi.Input<string>;
    /**
     * The repeat interval of the maintenance window from the first occurrence.
     */
    repeatInterval?: pulumi.Input<number>;
    /**
     * The repeat cadence for the maintenance window. Possible values `DAY`, `WEEK` and `MONTH`.
     */
    repeatUnit?: pulumi.Input<string>;
    /**
     * The start date of the maintenance window.
     */
    startsAt?: pulumi.Input<string>;
    /**
     * The names of the checks and groups maintenance window should apply to.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a MaintenanceWindow resource.
 */
export interface MaintenanceWindowArgs {
    /**
     * The end date of the maintenance window.
     */
    endsAt: pulumi.Input<string>;
    /**
     * The maintenance window name.
     */
    name?: pulumi.Input<string>;
    /**
     * The date on which the maintenance window should stop repeating.
     */
    repeatEndsAt?: pulumi.Input<string>;
    /**
     * The repeat interval of the maintenance window from the first occurrence.
     */
    repeatInterval?: pulumi.Input<number>;
    /**
     * The repeat cadence for the maintenance window. Possible values `DAY`, `WEEK` and `MONTH`.
     */
    repeatUnit?: pulumi.Input<string>;
    /**
     * The start date of the maintenance window.
     */
    startsAt: pulumi.Input<string>;
    /**
     * The names of the checks and groups maintenance window should apply to.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
