// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

import * as utilities from "../utilities";

export interface AlertChannelEmail {
    address: pulumi.Input<string>;
}

export interface AlertChannelOpsgenie {
    apiKey: pulumi.Input<string>;
    name: pulumi.Input<string>;
    priority: pulumi.Input<string>;
    region: pulumi.Input<string>;
}

export interface AlertChannelPagerduty {
    account?: pulumi.Input<string>;
    serviceKey: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
}

export interface AlertChannelSlack {
    channel: pulumi.Input<string>;
    url: pulumi.Input<string>;
}

export interface AlertChannelSms {
    name: pulumi.Input<string>;
    number: pulumi.Input<string>;
}

export interface AlertChannelWebhook {
    headers?: pulumi.Input<{[key: string]: any}>;
    method?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    queryParameters?: pulumi.Input<{[key: string]: any}>;
    template?: pulumi.Input<string>;
    url: pulumi.Input<string>;
    webhookSecret?: pulumi.Input<string>;
}

export interface CheckAlertChannelSubscription {
    activated: pulumi.Input<boolean>;
    channelId: pulumi.Input<number>;
}

export interface CheckAlertSettings {
    escalationType?: pulumi.Input<string>;
    reminders?: pulumi.Input<pulumi.Input<inputs.CheckAlertSettingsReminder>[]>;
    runBasedEscalations?: pulumi.Input<pulumi.Input<inputs.CheckAlertSettingsRunBasedEscalation>[]>;
    /**
     * @deprecated The property `ssl_certificates` is deprecated and it's ignored by the Checkly Public API. It will be removed in a future version.
     */
    sslCertificates?: pulumi.Input<pulumi.Input<inputs.CheckAlertSettingsSslCertificate>[]>;
    timeBasedEscalations?: pulumi.Input<pulumi.Input<inputs.CheckAlertSettingsTimeBasedEscalation>[]>;
}

export interface CheckAlertSettingsReminder {
    amount?: pulumi.Input<number>;
    interval?: pulumi.Input<number>;
}

export interface CheckAlertSettingsRunBasedEscalation {
    failedRunThreshold?: pulumi.Input<number>;
}

export interface CheckAlertSettingsSslCertificate {
    alertThreshold?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
}

export interface CheckAlertSettingsTimeBasedEscalation {
    minutesFailingThreshold?: pulumi.Input<number>;
}

export interface CheckGroupAlertChannelSubscription {
    activated: pulumi.Input<boolean>;
    channelId: pulumi.Input<number>;
}

export interface CheckGroupAlertSettings {
    escalationType?: pulumi.Input<string>;
    reminders?: pulumi.Input<pulumi.Input<inputs.CheckGroupAlertSettingsReminder>[]>;
    runBasedEscalations?: pulumi.Input<pulumi.Input<inputs.CheckGroupAlertSettingsRunBasedEscalation>[]>;
    /**
     * @deprecated The property `ssl_certificates` is deprecated and it's ignored by the Checkly Public API. It will be removed in a future version.
     */
    sslCertificates?: pulumi.Input<pulumi.Input<inputs.CheckGroupAlertSettingsSslCertificate>[]>;
    timeBasedEscalations?: pulumi.Input<pulumi.Input<inputs.CheckGroupAlertSettingsTimeBasedEscalation>[]>;
}

export interface CheckGroupAlertSettingsReminder {
    amount?: pulumi.Input<number>;
    interval?: pulumi.Input<number>;
}

export interface CheckGroupAlertSettingsRunBasedEscalation {
    failedRunThreshold?: pulumi.Input<number>;
}

export interface CheckGroupAlertSettingsSslCertificate {
    alertThreshold?: pulumi.Input<number>;
    enabled?: pulumi.Input<boolean>;
}

export interface CheckGroupAlertSettingsTimeBasedEscalation {
    minutesFailingThreshold?: pulumi.Input<number>;
}

export interface CheckGroupApiCheckDefaults {
    assertions?: pulumi.Input<pulumi.Input<inputs.CheckGroupApiCheckDefaultsAssertion>[]>;
    basicAuth?: pulumi.Input<inputs.CheckGroupApiCheckDefaultsBasicAuth>;
    headers?: pulumi.Input<{[key: string]: any}>;
    queryParameters?: pulumi.Input<{[key: string]: any}>;
    url?: pulumi.Input<string>;
}
/**
 * checkGroupApiCheckDefaultsProvideDefaults sets the appropriate defaults for CheckGroupApiCheckDefaults
 */
export function checkGroupApiCheckDefaultsProvideDefaults(val: CheckGroupApiCheckDefaults): CheckGroupApiCheckDefaults {
    return {
        ...val,
        url: (val.url) ?? "",
    };
}

export interface CheckGroupApiCheckDefaultsAssertion {
    comparison: pulumi.Input<string>;
    property?: pulumi.Input<string>;
    source: pulumi.Input<string>;
    target: pulumi.Input<string>;
}

export interface CheckGroupApiCheckDefaultsBasicAuth {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}

export interface CheckRequest {
    assertions?: pulumi.Input<pulumi.Input<inputs.CheckRequestAssertion>[]>;
    basicAuth?: pulumi.Input<inputs.CheckRequestBasicAuth>;
    body?: pulumi.Input<string>;
    bodyType?: pulumi.Input<string>;
    followRedirects?: pulumi.Input<boolean>;
    headers?: pulumi.Input<{[key: string]: any}>;
    method?: pulumi.Input<string>;
    queryParameters?: pulumi.Input<{[key: string]: any}>;
    skipSsl?: pulumi.Input<boolean>;
    url: pulumi.Input<string>;
}

export interface CheckRequestAssertion {
    comparison: pulumi.Input<string>;
    property?: pulumi.Input<string>;
    source: pulumi.Input<string>;
    target?: pulumi.Input<string>;
}

export interface CheckRequestBasicAuth {
    password: pulumi.Input<string>;
    username: pulumi.Input<string>;
}
