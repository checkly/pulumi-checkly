// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package checkly

import (
	"context"
	"reflect"

	"errors"
	"github.com/checkly/pulumi-checkly/sdk/v2/go/checkly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/checkly/pulumi-checkly/sdk/v2/go/checkly"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := checkly.NewDashboard(ctx, "dashboard_1", &checkly.DashboardArgs{
//				CustomUrl:      pulumi.String("checkly"),
//				CustomDomain:   pulumi.String("status.example.com"),
//				Logo:           pulumi.String("https://www.checklyhq.com/logo.png"),
//				Header:         pulumi.String("Public dashboard"),
//				RefreshRate:    pulumi.Int(60),
//				Paginate:       pulumi.Bool(false),
//				PaginationRate: pulumi.Int(30),
//				HideTags:       pulumi.Bool(false),
//				Width:          pulumi.String("FULL"),
//				Tags: pulumi.StringArray{
//					pulumi.String("production"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type Dashboard struct {
	pulumi.CustomResourceState

	// Determines how many checks to show per page. Possible values are between 1 and 20. (Default `15`).
	ChecksPerPage pulumi.IntPtrOutput `pulumi:"checksPerPage"`
	// Custom CSS to be applied to the dashboard.
	CustomCss pulumi.StringPtrOutput `pulumi:"customCss"`
	// A custom user domain, e.g. 'status.example.com'. See the docs on updating your DNS and SSL usage.
	CustomDomain pulumi.StringPtrOutput `pulumi:"customDomain"`
	// A subdomain name under 'checklyhq.com'. Needs to be unique across all users.
	CustomUrl pulumi.StringOutput `pulumi:"customUrl"`
	// HTML \n\n description for the dashboard.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Enable incident support for the dashboard. (Default `false`).
	EnableIncidents pulumi.BoolPtrOutput `pulumi:"enableIncidents"`
	// Expand or collapse checks on the dashboard. (Default `false`).
	ExpandChecks pulumi.BoolPtrOutput `pulumi:"expandChecks"`
	// A URL pointing to an image file to use as browser favicon.
	Favicon pulumi.StringPtrOutput `pulumi:"favicon"`
	// A piece of text displayed at the top of your dashboard.
	Header pulumi.StringOutput `pulumi:"header"`
	// Show or hide the tags on the dashboard. (Default `false`).
	HideTags pulumi.BoolPtrOutput `pulumi:"hideTags"`
	// Set your dashboard as private and generate key.
	IsPrivate pulumi.BoolPtrOutput `pulumi:"isPrivate"`
	// The access key when the dashboard is private.
	Key pulumi.StringOutput `pulumi:"key"`
	// A link to for the dashboard logo.
	Link pulumi.StringPtrOutput `pulumi:"link"`
	// A URL pointing to an image file to use for the dashboard logo.
	Logo pulumi.StringPtrOutput `pulumi:"logo"`
	// Determines if pagination is on or off. (Default `true`).
	Paginate pulumi.BoolPtrOutput `pulumi:"paginate"`
	// How often to trigger pagination in seconds. Possible values `30`, `60` and `300`. (Default `60`).
	PaginationRate pulumi.IntPtrOutput `pulumi:"paginationRate"`
	// How often to refresh the dashboard in seconds. Possible values `60`, '300' and `600`. (Default `60`).
	RefreshRate pulumi.IntPtrOutput `pulumi:"refreshRate"`
	// Show or hide check run links on the dashboard. (Default `false`).
	ShowCheckRunLinks pulumi.BoolPtrOutput `pulumi:"showCheckRunLinks"`
	// Show or hide header and description on the dashboard. (Default `true`).
	ShowHeader pulumi.BoolPtrOutput `pulumi:"showHeader"`
	// Show or hide the P95 stats on the dashboard. (Default `true`).
	ShowP95 pulumi.BoolPtrOutput `pulumi:"showP95"`
	// Show or hide the P99 stats on the dashboard. (Default `true`).
	ShowP99 pulumi.BoolPtrOutput `pulumi:"showP99"`
	// A list of one or more tags that filter which checks to display on the dashboard.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// Set when to use AND operator for fetching dashboard tags. (Default `false`).
	UseTagsAndOperator pulumi.BoolPtrOutput `pulumi:"useTagsAndOperator"`
	// Determines whether to use the full screen or focus in the center. Possible values are `FULL` and `960PX`. (Default `FULL`).
	Width pulumi.StringPtrOutput `pulumi:"width"`
}

// NewDashboard registers a new resource with the given unique name, arguments, and options.
func NewDashboard(ctx *pulumi.Context,
	name string, args *DashboardArgs, opts ...pulumi.ResourceOption) (*Dashboard, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomUrl == nil {
		return nil, errors.New("invalid value for required argument 'CustomUrl'")
	}
	if args.Header == nil {
		return nil, errors.New("invalid value for required argument 'Header'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"key",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Dashboard
	err := ctx.RegisterResource("checkly:index/dashboard:Dashboard", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDashboard gets an existing Dashboard resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDashboard(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DashboardState, opts ...pulumi.ResourceOption) (*Dashboard, error) {
	var resource Dashboard
	err := ctx.ReadResource("checkly:index/dashboard:Dashboard", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Dashboard resources.
type dashboardState struct {
	// Determines how many checks to show per page. Possible values are between 1 and 20. (Default `15`).
	ChecksPerPage *int `pulumi:"checksPerPage"`
	// Custom CSS to be applied to the dashboard.
	CustomCss *string `pulumi:"customCss"`
	// A custom user domain, e.g. 'status.example.com'. See the docs on updating your DNS and SSL usage.
	CustomDomain *string `pulumi:"customDomain"`
	// A subdomain name under 'checklyhq.com'. Needs to be unique across all users.
	CustomUrl *string `pulumi:"customUrl"`
	// HTML \n\n description for the dashboard.
	Description *string `pulumi:"description"`
	// Enable incident support for the dashboard. (Default `false`).
	EnableIncidents *bool `pulumi:"enableIncidents"`
	// Expand or collapse checks on the dashboard. (Default `false`).
	ExpandChecks *bool `pulumi:"expandChecks"`
	// A URL pointing to an image file to use as browser favicon.
	Favicon *string `pulumi:"favicon"`
	// A piece of text displayed at the top of your dashboard.
	Header *string `pulumi:"header"`
	// Show or hide the tags on the dashboard. (Default `false`).
	HideTags *bool `pulumi:"hideTags"`
	// Set your dashboard as private and generate key.
	IsPrivate *bool `pulumi:"isPrivate"`
	// The access key when the dashboard is private.
	Key *string `pulumi:"key"`
	// A link to for the dashboard logo.
	Link *string `pulumi:"link"`
	// A URL pointing to an image file to use for the dashboard logo.
	Logo *string `pulumi:"logo"`
	// Determines if pagination is on or off. (Default `true`).
	Paginate *bool `pulumi:"paginate"`
	// How often to trigger pagination in seconds. Possible values `30`, `60` and `300`. (Default `60`).
	PaginationRate *int `pulumi:"paginationRate"`
	// How often to refresh the dashboard in seconds. Possible values `60`, '300' and `600`. (Default `60`).
	RefreshRate *int `pulumi:"refreshRate"`
	// Show or hide check run links on the dashboard. (Default `false`).
	ShowCheckRunLinks *bool `pulumi:"showCheckRunLinks"`
	// Show or hide header and description on the dashboard. (Default `true`).
	ShowHeader *bool `pulumi:"showHeader"`
	// Show or hide the P95 stats on the dashboard. (Default `true`).
	ShowP95 *bool `pulumi:"showP95"`
	// Show or hide the P99 stats on the dashboard. (Default `true`).
	ShowP99 *bool `pulumi:"showP99"`
	// A list of one or more tags that filter which checks to display on the dashboard.
	Tags []string `pulumi:"tags"`
	// Set when to use AND operator for fetching dashboard tags. (Default `false`).
	UseTagsAndOperator *bool `pulumi:"useTagsAndOperator"`
	// Determines whether to use the full screen or focus in the center. Possible values are `FULL` and `960PX`. (Default `FULL`).
	Width *string `pulumi:"width"`
}

type DashboardState struct {
	// Determines how many checks to show per page. Possible values are between 1 and 20. (Default `15`).
	ChecksPerPage pulumi.IntPtrInput
	// Custom CSS to be applied to the dashboard.
	CustomCss pulumi.StringPtrInput
	// A custom user domain, e.g. 'status.example.com'. See the docs on updating your DNS and SSL usage.
	CustomDomain pulumi.StringPtrInput
	// A subdomain name under 'checklyhq.com'. Needs to be unique across all users.
	CustomUrl pulumi.StringPtrInput
	// HTML \n\n description for the dashboard.
	Description pulumi.StringPtrInput
	// Enable incident support for the dashboard. (Default `false`).
	EnableIncidents pulumi.BoolPtrInput
	// Expand or collapse checks on the dashboard. (Default `false`).
	ExpandChecks pulumi.BoolPtrInput
	// A URL pointing to an image file to use as browser favicon.
	Favicon pulumi.StringPtrInput
	// A piece of text displayed at the top of your dashboard.
	Header pulumi.StringPtrInput
	// Show or hide the tags on the dashboard. (Default `false`).
	HideTags pulumi.BoolPtrInput
	// Set your dashboard as private and generate key.
	IsPrivate pulumi.BoolPtrInput
	// The access key when the dashboard is private.
	Key pulumi.StringPtrInput
	// A link to for the dashboard logo.
	Link pulumi.StringPtrInput
	// A URL pointing to an image file to use for the dashboard logo.
	Logo pulumi.StringPtrInput
	// Determines if pagination is on or off. (Default `true`).
	Paginate pulumi.BoolPtrInput
	// How often to trigger pagination in seconds. Possible values `30`, `60` and `300`. (Default `60`).
	PaginationRate pulumi.IntPtrInput
	// How often to refresh the dashboard in seconds. Possible values `60`, '300' and `600`. (Default `60`).
	RefreshRate pulumi.IntPtrInput
	// Show or hide check run links on the dashboard. (Default `false`).
	ShowCheckRunLinks pulumi.BoolPtrInput
	// Show or hide header and description on the dashboard. (Default `true`).
	ShowHeader pulumi.BoolPtrInput
	// Show or hide the P95 stats on the dashboard. (Default `true`).
	ShowP95 pulumi.BoolPtrInput
	// Show or hide the P99 stats on the dashboard. (Default `true`).
	ShowP99 pulumi.BoolPtrInput
	// A list of one or more tags that filter which checks to display on the dashboard.
	Tags pulumi.StringArrayInput
	// Set when to use AND operator for fetching dashboard tags. (Default `false`).
	UseTagsAndOperator pulumi.BoolPtrInput
	// Determines whether to use the full screen or focus in the center. Possible values are `FULL` and `960PX`. (Default `FULL`).
	Width pulumi.StringPtrInput
}

func (DashboardState) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardState)(nil)).Elem()
}

type dashboardArgs struct {
	// Determines how many checks to show per page. Possible values are between 1 and 20. (Default `15`).
	ChecksPerPage *int `pulumi:"checksPerPage"`
	// Custom CSS to be applied to the dashboard.
	CustomCss *string `pulumi:"customCss"`
	// A custom user domain, e.g. 'status.example.com'. See the docs on updating your DNS and SSL usage.
	CustomDomain *string `pulumi:"customDomain"`
	// A subdomain name under 'checklyhq.com'. Needs to be unique across all users.
	CustomUrl string `pulumi:"customUrl"`
	// HTML \n\n description for the dashboard.
	Description *string `pulumi:"description"`
	// Enable incident support for the dashboard. (Default `false`).
	EnableIncidents *bool `pulumi:"enableIncidents"`
	// Expand or collapse checks on the dashboard. (Default `false`).
	ExpandChecks *bool `pulumi:"expandChecks"`
	// A URL pointing to an image file to use as browser favicon.
	Favicon *string `pulumi:"favicon"`
	// A piece of text displayed at the top of your dashboard.
	Header string `pulumi:"header"`
	// Show or hide the tags on the dashboard. (Default `false`).
	HideTags *bool `pulumi:"hideTags"`
	// Set your dashboard as private and generate key.
	IsPrivate *bool `pulumi:"isPrivate"`
	// A link to for the dashboard logo.
	Link *string `pulumi:"link"`
	// A URL pointing to an image file to use for the dashboard logo.
	Logo *string `pulumi:"logo"`
	// Determines if pagination is on or off. (Default `true`).
	Paginate *bool `pulumi:"paginate"`
	// How often to trigger pagination in seconds. Possible values `30`, `60` and `300`. (Default `60`).
	PaginationRate *int `pulumi:"paginationRate"`
	// How often to refresh the dashboard in seconds. Possible values `60`, '300' and `600`. (Default `60`).
	RefreshRate *int `pulumi:"refreshRate"`
	// Show or hide check run links on the dashboard. (Default `false`).
	ShowCheckRunLinks *bool `pulumi:"showCheckRunLinks"`
	// Show or hide header and description on the dashboard. (Default `true`).
	ShowHeader *bool `pulumi:"showHeader"`
	// Show or hide the P95 stats on the dashboard. (Default `true`).
	ShowP95 *bool `pulumi:"showP95"`
	// Show or hide the P99 stats on the dashboard. (Default `true`).
	ShowP99 *bool `pulumi:"showP99"`
	// A list of one or more tags that filter which checks to display on the dashboard.
	Tags []string `pulumi:"tags"`
	// Set when to use AND operator for fetching dashboard tags. (Default `false`).
	UseTagsAndOperator *bool `pulumi:"useTagsAndOperator"`
	// Determines whether to use the full screen or focus in the center. Possible values are `FULL` and `960PX`. (Default `FULL`).
	Width *string `pulumi:"width"`
}

// The set of arguments for constructing a Dashboard resource.
type DashboardArgs struct {
	// Determines how many checks to show per page. Possible values are between 1 and 20. (Default `15`).
	ChecksPerPage pulumi.IntPtrInput
	// Custom CSS to be applied to the dashboard.
	CustomCss pulumi.StringPtrInput
	// A custom user domain, e.g. 'status.example.com'. See the docs on updating your DNS and SSL usage.
	CustomDomain pulumi.StringPtrInput
	// A subdomain name under 'checklyhq.com'. Needs to be unique across all users.
	CustomUrl pulumi.StringInput
	// HTML \n\n description for the dashboard.
	Description pulumi.StringPtrInput
	// Enable incident support for the dashboard. (Default `false`).
	EnableIncidents pulumi.BoolPtrInput
	// Expand or collapse checks on the dashboard. (Default `false`).
	ExpandChecks pulumi.BoolPtrInput
	// A URL pointing to an image file to use as browser favicon.
	Favicon pulumi.StringPtrInput
	// A piece of text displayed at the top of your dashboard.
	Header pulumi.StringInput
	// Show or hide the tags on the dashboard. (Default `false`).
	HideTags pulumi.BoolPtrInput
	// Set your dashboard as private and generate key.
	IsPrivate pulumi.BoolPtrInput
	// A link to for the dashboard logo.
	Link pulumi.StringPtrInput
	// A URL pointing to an image file to use for the dashboard logo.
	Logo pulumi.StringPtrInput
	// Determines if pagination is on or off. (Default `true`).
	Paginate pulumi.BoolPtrInput
	// How often to trigger pagination in seconds. Possible values `30`, `60` and `300`. (Default `60`).
	PaginationRate pulumi.IntPtrInput
	// How often to refresh the dashboard in seconds. Possible values `60`, '300' and `600`. (Default `60`).
	RefreshRate pulumi.IntPtrInput
	// Show or hide check run links on the dashboard. (Default `false`).
	ShowCheckRunLinks pulumi.BoolPtrInput
	// Show or hide header and description on the dashboard. (Default `true`).
	ShowHeader pulumi.BoolPtrInput
	// Show or hide the P95 stats on the dashboard. (Default `true`).
	ShowP95 pulumi.BoolPtrInput
	// Show or hide the P99 stats on the dashboard. (Default `true`).
	ShowP99 pulumi.BoolPtrInput
	// A list of one or more tags that filter which checks to display on the dashboard.
	Tags pulumi.StringArrayInput
	// Set when to use AND operator for fetching dashboard tags. (Default `false`).
	UseTagsAndOperator pulumi.BoolPtrInput
	// Determines whether to use the full screen or focus in the center. Possible values are `FULL` and `960PX`. (Default `FULL`).
	Width pulumi.StringPtrInput
}

func (DashboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dashboardArgs)(nil)).Elem()
}

type DashboardInput interface {
	pulumi.Input

	ToDashboardOutput() DashboardOutput
	ToDashboardOutputWithContext(ctx context.Context) DashboardOutput
}

func (*Dashboard) ElementType() reflect.Type {
	return reflect.TypeOf((**Dashboard)(nil)).Elem()
}

func (i *Dashboard) ToDashboardOutput() DashboardOutput {
	return i.ToDashboardOutputWithContext(context.Background())
}

func (i *Dashboard) ToDashboardOutputWithContext(ctx context.Context) DashboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardOutput)
}

// DashboardArrayInput is an input type that accepts DashboardArray and DashboardArrayOutput values.
// You can construct a concrete instance of `DashboardArrayInput` via:
//
//	DashboardArray{ DashboardArgs{...} }
type DashboardArrayInput interface {
	pulumi.Input

	ToDashboardArrayOutput() DashboardArrayOutput
	ToDashboardArrayOutputWithContext(context.Context) DashboardArrayOutput
}

type DashboardArray []DashboardInput

func (DashboardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Dashboard)(nil)).Elem()
}

func (i DashboardArray) ToDashboardArrayOutput() DashboardArrayOutput {
	return i.ToDashboardArrayOutputWithContext(context.Background())
}

func (i DashboardArray) ToDashboardArrayOutputWithContext(ctx context.Context) DashboardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardArrayOutput)
}

// DashboardMapInput is an input type that accepts DashboardMap and DashboardMapOutput values.
// You can construct a concrete instance of `DashboardMapInput` via:
//
//	DashboardMap{ "key": DashboardArgs{...} }
type DashboardMapInput interface {
	pulumi.Input

	ToDashboardMapOutput() DashboardMapOutput
	ToDashboardMapOutputWithContext(context.Context) DashboardMapOutput
}

type DashboardMap map[string]DashboardInput

func (DashboardMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Dashboard)(nil)).Elem()
}

func (i DashboardMap) ToDashboardMapOutput() DashboardMapOutput {
	return i.ToDashboardMapOutputWithContext(context.Background())
}

func (i DashboardMap) ToDashboardMapOutputWithContext(ctx context.Context) DashboardMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DashboardMapOutput)
}

type DashboardOutput struct{ *pulumi.OutputState }

func (DashboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Dashboard)(nil)).Elem()
}

func (o DashboardOutput) ToDashboardOutput() DashboardOutput {
	return o
}

func (o DashboardOutput) ToDashboardOutputWithContext(ctx context.Context) DashboardOutput {
	return o
}

// Determines how many checks to show per page. Possible values are between 1 and 20. (Default `15`).
func (o DashboardOutput) ChecksPerPage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.IntPtrOutput { return v.ChecksPerPage }).(pulumi.IntPtrOutput)
}

// Custom CSS to be applied to the dashboard.
func (o DashboardOutput) CustomCss() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.StringPtrOutput { return v.CustomCss }).(pulumi.StringPtrOutput)
}

// A custom user domain, e.g. 'status.example.com'. See the docs on updating your DNS and SSL usage.
func (o DashboardOutput) CustomDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.StringPtrOutput { return v.CustomDomain }).(pulumi.StringPtrOutput)
}

// A subdomain name under 'checklyhq.com'. Needs to be unique across all users.
func (o DashboardOutput) CustomUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.StringOutput { return v.CustomUrl }).(pulumi.StringOutput)
}

// HTML \n\n description for the dashboard.
func (o DashboardOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Enable incident support for the dashboard. (Default `false`).
func (o DashboardOutput) EnableIncidents() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.BoolPtrOutput { return v.EnableIncidents }).(pulumi.BoolPtrOutput)
}

// Expand or collapse checks on the dashboard. (Default `false`).
func (o DashboardOutput) ExpandChecks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.BoolPtrOutput { return v.ExpandChecks }).(pulumi.BoolPtrOutput)
}

// A URL pointing to an image file to use as browser favicon.
func (o DashboardOutput) Favicon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.StringPtrOutput { return v.Favicon }).(pulumi.StringPtrOutput)
}

// A piece of text displayed at the top of your dashboard.
func (o DashboardOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.StringOutput { return v.Header }).(pulumi.StringOutput)
}

// Show or hide the tags on the dashboard. (Default `false`).
func (o DashboardOutput) HideTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.BoolPtrOutput { return v.HideTags }).(pulumi.BoolPtrOutput)
}

// Set your dashboard as private and generate key.
func (o DashboardOutput) IsPrivate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.BoolPtrOutput { return v.IsPrivate }).(pulumi.BoolPtrOutput)
}

// The access key when the dashboard is private.
func (o DashboardOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// A link to for the dashboard logo.
func (o DashboardOutput) Link() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.StringPtrOutput { return v.Link }).(pulumi.StringPtrOutput)
}

// A URL pointing to an image file to use for the dashboard logo.
func (o DashboardOutput) Logo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.StringPtrOutput { return v.Logo }).(pulumi.StringPtrOutput)
}

// Determines if pagination is on or off. (Default `true`).
func (o DashboardOutput) Paginate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.BoolPtrOutput { return v.Paginate }).(pulumi.BoolPtrOutput)
}

// How often to trigger pagination in seconds. Possible values `30`, `60` and `300`. (Default `60`).
func (o DashboardOutput) PaginationRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.IntPtrOutput { return v.PaginationRate }).(pulumi.IntPtrOutput)
}

// How often to refresh the dashboard in seconds. Possible values `60`, '300' and `600`. (Default `60`).
func (o DashboardOutput) RefreshRate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.IntPtrOutput { return v.RefreshRate }).(pulumi.IntPtrOutput)
}

// Show or hide check run links on the dashboard. (Default `false`).
func (o DashboardOutput) ShowCheckRunLinks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.BoolPtrOutput { return v.ShowCheckRunLinks }).(pulumi.BoolPtrOutput)
}

// Show or hide header and description on the dashboard. (Default `true`).
func (o DashboardOutput) ShowHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.BoolPtrOutput { return v.ShowHeader }).(pulumi.BoolPtrOutput)
}

// Show or hide the P95 stats on the dashboard. (Default `true`).
func (o DashboardOutput) ShowP95() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.BoolPtrOutput { return v.ShowP95 }).(pulumi.BoolPtrOutput)
}

// Show or hide the P99 stats on the dashboard. (Default `true`).
func (o DashboardOutput) ShowP99() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.BoolPtrOutput { return v.ShowP99 }).(pulumi.BoolPtrOutput)
}

// A list of one or more tags that filter which checks to display on the dashboard.
func (o DashboardOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.StringArrayOutput { return v.Tags }).(pulumi.StringArrayOutput)
}

// Set when to use AND operator for fetching dashboard tags. (Default `false`).
func (o DashboardOutput) UseTagsAndOperator() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.BoolPtrOutput { return v.UseTagsAndOperator }).(pulumi.BoolPtrOutput)
}

// Determines whether to use the full screen or focus in the center. Possible values are `FULL` and `960PX`. (Default `FULL`).
func (o DashboardOutput) Width() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Dashboard) pulumi.StringPtrOutput { return v.Width }).(pulumi.StringPtrOutput)
}

type DashboardArrayOutput struct{ *pulumi.OutputState }

func (DashboardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Dashboard)(nil)).Elem()
}

func (o DashboardArrayOutput) ToDashboardArrayOutput() DashboardArrayOutput {
	return o
}

func (o DashboardArrayOutput) ToDashboardArrayOutputWithContext(ctx context.Context) DashboardArrayOutput {
	return o
}

func (o DashboardArrayOutput) Index(i pulumi.IntInput) DashboardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Dashboard {
		return vs[0].([]*Dashboard)[vs[1].(int)]
	}).(DashboardOutput)
}

type DashboardMapOutput struct{ *pulumi.OutputState }

func (DashboardMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Dashboard)(nil)).Elem()
}

func (o DashboardMapOutput) ToDashboardMapOutput() DashboardMapOutput {
	return o
}

func (o DashboardMapOutput) ToDashboardMapOutputWithContext(ctx context.Context) DashboardMapOutput {
	return o
}

func (o DashboardMapOutput) MapIndex(k pulumi.StringInput) DashboardOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Dashboard {
		return vs[0].(map[string]*Dashboard)[vs[1].(string)]
	}).(DashboardOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardInput)(nil)).Elem(), &Dashboard{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardArrayInput)(nil)).Elem(), DashboardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DashboardMapInput)(nil)).Elem(), DashboardMap{})
	pulumi.RegisterOutputType(DashboardOutput{})
	pulumi.RegisterOutputType(DashboardArrayOutput{})
	pulumi.RegisterOutputType(DashboardMapOutput{})
}
