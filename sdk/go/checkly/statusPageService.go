// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package checkly

import (
	"context"
	"reflect"

	"github.com/checkly/pulumi-checkly/sdk/v2/go/checkly/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Status page services represent functional pieces of your application or website, such as landing page, API, support portal etc.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/checkly/pulumi-checkly/sdk/v2/go/checkly"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := checkly.NewStatusPageService(ctx, "backend", &checkly.StatusPageServiceArgs{
//				Name: pulumi.String("Backend"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = checkly.NewStatusPageService(ctx, "frontend", &checkly.StatusPageServiceArgs{
//				Name: pulumi.String("Frontend"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type StatusPageService struct {
	pulumi.CustomResourceState

	// The name of the service.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewStatusPageService registers a new resource with the given unique name, arguments, and options.
func NewStatusPageService(ctx *pulumi.Context,
	name string, args *StatusPageServiceArgs, opts ...pulumi.ResourceOption) (*StatusPageService, error) {
	if args == nil {
		args = &StatusPageServiceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StatusPageService
	err := ctx.RegisterResource("checkly:index/statusPageService:StatusPageService", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStatusPageService gets an existing StatusPageService resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStatusPageService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StatusPageServiceState, opts ...pulumi.ResourceOption) (*StatusPageService, error) {
	var resource StatusPageService
	err := ctx.ReadResource("checkly:index/statusPageService:StatusPageService", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StatusPageService resources.
type statusPageServiceState struct {
	// The name of the service.
	Name *string `pulumi:"name"`
}

type StatusPageServiceState struct {
	// The name of the service.
	Name pulumi.StringPtrInput
}

func (StatusPageServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*statusPageServiceState)(nil)).Elem()
}

type statusPageServiceArgs struct {
	// The name of the service.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a StatusPageService resource.
type StatusPageServiceArgs struct {
	// The name of the service.
	Name pulumi.StringPtrInput
}

func (StatusPageServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*statusPageServiceArgs)(nil)).Elem()
}

type StatusPageServiceInput interface {
	pulumi.Input

	ToStatusPageServiceOutput() StatusPageServiceOutput
	ToStatusPageServiceOutputWithContext(ctx context.Context) StatusPageServiceOutput
}

func (*StatusPageService) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusPageService)(nil)).Elem()
}

func (i *StatusPageService) ToStatusPageServiceOutput() StatusPageServiceOutput {
	return i.ToStatusPageServiceOutputWithContext(context.Background())
}

func (i *StatusPageService) ToStatusPageServiceOutputWithContext(ctx context.Context) StatusPageServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusPageServiceOutput)
}

// StatusPageServiceArrayInput is an input type that accepts StatusPageServiceArray and StatusPageServiceArrayOutput values.
// You can construct a concrete instance of `StatusPageServiceArrayInput` via:
//
//	StatusPageServiceArray{ StatusPageServiceArgs{...} }
type StatusPageServiceArrayInput interface {
	pulumi.Input

	ToStatusPageServiceArrayOutput() StatusPageServiceArrayOutput
	ToStatusPageServiceArrayOutputWithContext(context.Context) StatusPageServiceArrayOutput
}

type StatusPageServiceArray []StatusPageServiceInput

func (StatusPageServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StatusPageService)(nil)).Elem()
}

func (i StatusPageServiceArray) ToStatusPageServiceArrayOutput() StatusPageServiceArrayOutput {
	return i.ToStatusPageServiceArrayOutputWithContext(context.Background())
}

func (i StatusPageServiceArray) ToStatusPageServiceArrayOutputWithContext(ctx context.Context) StatusPageServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusPageServiceArrayOutput)
}

// StatusPageServiceMapInput is an input type that accepts StatusPageServiceMap and StatusPageServiceMapOutput values.
// You can construct a concrete instance of `StatusPageServiceMapInput` via:
//
//	StatusPageServiceMap{ "key": StatusPageServiceArgs{...} }
type StatusPageServiceMapInput interface {
	pulumi.Input

	ToStatusPageServiceMapOutput() StatusPageServiceMapOutput
	ToStatusPageServiceMapOutputWithContext(context.Context) StatusPageServiceMapOutput
}

type StatusPageServiceMap map[string]StatusPageServiceInput

func (StatusPageServiceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StatusPageService)(nil)).Elem()
}

func (i StatusPageServiceMap) ToStatusPageServiceMapOutput() StatusPageServiceMapOutput {
	return i.ToStatusPageServiceMapOutputWithContext(context.Background())
}

func (i StatusPageServiceMap) ToStatusPageServiceMapOutputWithContext(ctx context.Context) StatusPageServiceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatusPageServiceMapOutput)
}

type StatusPageServiceOutput struct{ *pulumi.OutputState }

func (StatusPageServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StatusPageService)(nil)).Elem()
}

func (o StatusPageServiceOutput) ToStatusPageServiceOutput() StatusPageServiceOutput {
	return o
}

func (o StatusPageServiceOutput) ToStatusPageServiceOutputWithContext(ctx context.Context) StatusPageServiceOutput {
	return o
}

// The name of the service.
func (o StatusPageServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *StatusPageService) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type StatusPageServiceArrayOutput struct{ *pulumi.OutputState }

func (StatusPageServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StatusPageService)(nil)).Elem()
}

func (o StatusPageServiceArrayOutput) ToStatusPageServiceArrayOutput() StatusPageServiceArrayOutput {
	return o
}

func (o StatusPageServiceArrayOutput) ToStatusPageServiceArrayOutputWithContext(ctx context.Context) StatusPageServiceArrayOutput {
	return o
}

func (o StatusPageServiceArrayOutput) Index(i pulumi.IntInput) StatusPageServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StatusPageService {
		return vs[0].([]*StatusPageService)[vs[1].(int)]
	}).(StatusPageServiceOutput)
}

type StatusPageServiceMapOutput struct{ *pulumi.OutputState }

func (StatusPageServiceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StatusPageService)(nil)).Elem()
}

func (o StatusPageServiceMapOutput) ToStatusPageServiceMapOutput() StatusPageServiceMapOutput {
	return o
}

func (o StatusPageServiceMapOutput) ToStatusPageServiceMapOutputWithContext(ctx context.Context) StatusPageServiceMapOutput {
	return o
}

func (o StatusPageServiceMapOutput) MapIndex(k pulumi.StringInput) StatusPageServiceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StatusPageService {
		return vs[0].(map[string]*StatusPageService)[vs[1].(string)]
	}).(StatusPageServiceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StatusPageServiceInput)(nil)).Elem(), &StatusPageService{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatusPageServiceArrayInput)(nil)).Elem(), StatusPageServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatusPageServiceMapInput)(nil)).Elem(), StatusPageServiceMap{})
	pulumi.RegisterOutputType(StatusPageServiceOutput{})
	pulumi.RegisterOutputType(StatusPageServiceArrayOutput{})
	pulumi.RegisterOutputType(StatusPageServiceMapOutput{})
}
